openapi: 3.0.3
info:
  title: Kedai API
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0
externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io
servers:
  - url: http://localhost:8080
tags:
  - name: Location
  - name: User
  - name: Product
paths:
  /v1/users:
    get:
      tags:
        - User
      summary: Get user profile
      description: Get user profile data
      responses:
        '200':
          description: successful operation
          content:
            aplication/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/User'
  /v1/users/register:
    post:
      tags:
        - User
      summary: Register new user
      description: Register new user data
      requestBody:
        description: Create new user register data
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: "user@mail.com"
                password:
                  type: string
                  example: "password"
      responses:
        '201':
          description: successful operation
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                  - type: object
                    properties:
                      data:
                        type: object
                        properties:
                          email:
                            type: string
                            example: "user@mail.com"
                          username:
                            type: string
                            example: "user145"
        '400':
          description: bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    example: "BAD_REQUEST"
                  message:
                    type: string
                    example: "Email is required"
        '409':
          description: duplicate entry
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    example: "EMAIL_ALREADY_REGISTERED"
                  message:
                    type: string
                    example: "User already exist"
        '500':
          description: internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    example: "INTERNAL_SERVER_ERROR"
                  message:
                    type: string
                    example: "error message"
  /v1/products/{code}:
    get:
      tags:
        - Product
      summary: Get product by code
      description: Get product information (including bulk price, media, and variant) by product code
      parameters:
        - in: path
          name: code
          schema:
            type: string
            example: PRODUCT_CODE
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/Product'
        '404':
          description: not found
          content:
            aplication/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    example: "NOT_FOUND"
                  message:
                    type: string
                    example: "error message"
        '500':
          description: internal server error
          content:
            aplication/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    example: "INTERNAL_SERVER_ERROR"
                  message:
                    type: string
                    example: "error message"
  
  /v1/locations/cities:
    get:
      tags:
        - Location
      summary: Get city list
      description: Get list of cities with pagination, filter by province id, and sort by most shops
      parameters:
        - in: query
          name: limit
          schema:
            type: integer
            default: 0
          description: No default limit, will get all data if not specified
        - in: query
          name: page
          schema:
            type: integer
            default: 1
        - in: query
          name: provinceId
          schema:
            type: integer
          description: Filter to get cities by province
        - in: query
          name: sort
          schema:
            type: string
          description: most_shops to sort cities by most shops
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                  - type: object
                    properties:
                      code:
                        example: 'OK'
                      message:
                        example: 'success'
                      data:
                        allOf:
                          - $ref: '#/components/schemas/PaginationResponse'
                          - type: object
                            properties:
                              data:
                                type: array
                                items:
                                  $ref: '#/components/schemas/City'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    example: "INTERNAL_SERVER_ERROR"
                  message:
                    type: string
                    example: "error message"
components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: number
          example: 1
        email:
          type: string
          format: email
          example: user@email.com
        username:
          type: string
          example: user_name
        profile:
          $ref: '#/components/schemas/UserProfile'
    UserProfile:
      type: object
      properties:
        id:
          type: number
          example: 1
        name:
          type: string
          example: user
        phoneNumber:
          type: string
          example: 0123456789
        dob:
          type: string
          format: date
          example: 2006-01-02
        gender:
          type: string
          example: male
        photoUrl:
          type: string
          example: http://photo.url.com
        userId:
          type: number
          example: 1
        defaultAddressId:
          type: number
          example: 1
    Product:
      type: object
      properties:
        id:
          type: number
          example: 1
        code:
          type: string
          example: PRODUCT_CODE
        name:
          type: string
          example: product name
        description:
          type: string
          example: product description
        view:
          type: integer
          example: 420
        isHazardous:
          type: boolean
          example: false
        weight:
          type: float
          example: 34.5
        length:
          type: float
          example: 10.0
        width:
          type: float
          example: 10.0
        height:
          type: float
          example: 10.0
        packagedSize:
          type: float
          example: 10.0
        isNew:
          type: boolean
          example: true
        isActive:
          type: boolean
          example: true
        rating:
          type: float
          example: 4.9
        shopId:
          type: integer
          example: 1
        categoryId:
          type: integer
          example: 2
        bulkPrice:
          $ref: '#/components/schemas/ProductBulkPrice'
        media:
          type: array
          items:
            $ref: '#/components/schemas/ProductMedia'
        variantGroup:
          type: array
          items:
            $ref: '#/components/schemas/VariantGroup'
    ProductBulkPrice:
      type: object
      properties:
        id:
          type: number
          example: 1
        minQuantity:
          type: number
          example: 10
        maxQuantity:
          type: number
          example: 70
        price:
          type: float
          example: 340000
        productId:
          type: number
          example: 1
    ProductMedia:
      type: object
      properties:
        id:
          type: number
          example: 1
        url:
          type: string
          example: http://product.media/example.png
        productId:
          type: integer
          example: 1
    VariantGroup:
      type: object
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: Size
        productId:
          type: integer
          example: 1
        variant:
          type: array
          items:
            $ref: '#/components/schemas/Variant'
    Variant:
      type: object
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: L
        mediaUrl:
          type: string
          example: http://variant.media/example.png
        groupId:
          type: integer
          example: 1
    City:
      type: object
      properties:
        id:
          type: integer
          example: 152
        name:
          type: string
          example: 'Jakarta Pusat'
        provinceId:
          type: integer
          example: 6
    Response:
      type: object
      properties:
        code:
          type: string
          example: CODE
        message:
          type: string
          example: message
        data:
          type: any
    PaginationResponse:
      type: object
      properties:
        data:
         type: any
        totalRows:
          type: integer
          example: 1
        totalPages:
          type: integer
          example: 1
        limit:
          type: integer
          example: 10
        page:
          type: integer
          example: 1
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
